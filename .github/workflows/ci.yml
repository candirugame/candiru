name: CI and Version Update

on:
  push:
    branches:
      - '**'

permissions:
  contents: write # For checkout and publishing GitHub release
  issues: write # To comment on issues
  pull-requests: write # To comment on pull requests and update metadata
  actions: write # To enable workflow actions like publishing
  commit-statuses: write # To update statuses of commits
  id-token: write # To enable use of OIDC for npm provenance

jobs:
  # Build Job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.7'
      - name: Install dependencies
        run: npm install
      - name: Build project
        run: npm run build
      - name: List build directory contents
        run: ls -la ./dist

  # Lint Job
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.7'
      - name: Install dependencies
        run: npm install
      - name: Run lint
        run: npm run lint

  # Healthcheck Job
  healthcheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.7'
      - name: Install dependencies
        run: npm install
      - name: Start server
        run: npm start &
      - name: Wait for server to start
        run: sleep 5
      - name: Health check
        run: curl -f http://localhost:3000 || exit 1

  # Audit Job
  audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.7'
      - name: Install dependencies
        run: npm install
      - name: Run npm audit
        run: npm audit --audit-level=moderate

  # Release Job (Only for main and dev branches)
  release:
    if: startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/heads/dev')
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # To publish a GitHub release
      issues: write # For comments on issues
      pull-requests: write # For comments on pull requests and update metadata
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
      - name: Install dependencies
        run: npm clean-install
      - name: Verify the integrity of dependencies
        run: npm audit signatures
      - name: Release
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_DEPLOY_TOKEN }}
        run: npx semantic-release --branch ${GITHUB_REF#refs/heads/} --ci
      - name: Extract new version
        id: get_version
        run: echo "version=$(npx -c 'echo $npm_package_version')" >> $GITHUB_OUTPUT

  # Update Game Version (Only for main branch after release)
  update-game-version:
    needs: release
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Set up credentials for pushing changes
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_DEPLOY_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.ACTIONS_DEPLOY_TOKEN }}@github.com/${{ github.repository }}
      - name: Check if commit is from GitHub Actions
        id: check_author
        run: |
          COMMIT_AUTHOR=$(git log -1 --pretty=format:'%an')
          if [ "$COMMIT_AUTHOR" = "github-actions[bot]" ]; then
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi
      - name: Update gameVersion.json
        if: steps.check_author.outputs.skip == 'false'
        run: |
          mkdir -p public
          echo "{\"version\": \"${{ needs.release.outputs.version }}\"}" > public/gameVersion.json
      - name: Commit and push changes
        if: steps.check_author.outputs.skip == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_DEPLOY_TOKEN }}
        run: |
          git add public/gameVersion.json
          git commit -m "Update gameVersion to ${{ needs.release.outputs.version }}" || echo "No changes to commit"
          git push origin main
      - name: Debugging List files in public after update
        if: steps.check_author.outputs.skip == 'false'
        run: ls -al public