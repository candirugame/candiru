name: Update Game Version

on:
  push:
    branches:
      - main

jobs:
  update-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Check if commit is from GitHub Actions
        id: check_author
        run: |
          COMMIT_AUTHOR=$(git log -1 --pretty=format:'%an')
          if [ "$COMMIT_AUTHOR" = "github-actions[bot]" ]; then
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Get commit hash
        if: steps.check_author.outputs.skip == 'false'
        id: get_hash
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Update gameVersion.json
        if: steps.check_author.outputs.skip == 'false'
        run: |
          mkdir -p public
          echo "{\"version\": \"${{ steps.get_hash.outputs.COMMIT_HASH }}\"}" > public/gameVersion.json

      - name: Commit and push changes
        if: steps.check_author.outputs.skip == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_DEPLOY_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.ACTIONS_DEPLOY_TOKEN }}@github.com/${{ github.repository }}
          git add public/gameVersion.json
          git commit -m "Update gameVersion to ${{ steps.get_hash.outputs.COMMIT_HASH }}" || echo "No changes to commit"
          git push origin main

      - name: Debugging List files in public after update
        if: steps.check_author.outputs.skip == 'false'
        run: ls -al public
